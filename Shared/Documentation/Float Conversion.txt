One of the challenges from this component was converting raw binary values into
floating point numbers. Not because this is difficult to do, but because PIC
floating point is not quite IEEE754 floating point.

Normally, you can convert raw binary into floating point with
    newFloat = *(float *)&oldInt;

But this is dependant on the floating point representation. After some testing,
we found raw values from a few floating point numbers:

 Int |  IEEE Float |  PIC Float
-----+-------------+-------------
 0.0 | 00 00 00 00 | 00 00 00 00
 1.0 | 3F 80 00 00 | 7F 00 00 00 
-1.0 | BF 80 00 00 | 7F 80 00 00
 2.0 | 40 00 00 00 | 80 00 00 00
-2.0 | C0 00 00 00 | 80 80 00 00
 0.5 | 3F 00 00 00 | 7E 00 00 00
-0.5 | BF 00 00 00 | 7E 80 00 00

IEEE Floating point representation:
 1 Sign bit
 8 Exponent bits
23 Fraction bits

Microchip Floating point representation:
 8 Exponent bits
 1 Sign bit
23 Fraction bits


Telemetry and Driver Display both receive data from the motor controller in raw
binary form of IEEE floating point. To convert to a useable Microchip floating
point format, the sign and exponent bits need to be shifted.